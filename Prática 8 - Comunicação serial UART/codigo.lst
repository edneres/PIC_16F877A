CCS PCM C Compiler, Version 5.007, 61971               20-ago-23 15:51

               Filename:   C:\Users\edyne\OneDrive\Área de Trabalho\UFPI\Programação\2 - UFPI\6 - Lab de Micro\Prática 8 - Comunicação serial UART\codigo.lst

               ROM used:   225 words (3%)
                           Largest free fragment is 2048
               RAM used:   15 (4%) at main() level
                           20 (6%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 7

*
0000:  NOP
0001:  MOVLW  00
0002:  MOVWF  0A
0003:  GOTO   0A3
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   046
.................... /* 
.................... 	Half - Duplex 
.................... 	 
.................... 	Lógica: 
.................... 		A cada um segundo, um contador é incrementado. 
.................... 		O valor desse contador é informado através do PORTB. 
.................... 		Esse valor é enviado pela porta serial. 
.................... 		Se a tecla "p" for pressionada, a contagem é parada. 
.................... 		Se a tecla "c" for pressionada, a contagem é continuada. 
.................... 		 
.................... 		#use232(...) 
.................... 		kbhit() // lê/recebe 
.................... 		putc()	// envia >> ASCI 
.................... 		 
.................... 		if(kbhit(serial)) 
.................... 		{ 
.................... 			opcao = getc(); 
.................... 			 
.................... 			if(opcao == 'p') 
.................... 			{ 
.................... 			 
.................... 			} 
.................... 			 
.................... 			else		// if(opcao == 'c') 
.................... 			{ 
.................... 			 
.................... 			} 
.................... 		} 
.................... */ 
....................  
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
0031:  MOVF   2D,W
0032:  CLRF   78
0033:  SUBWF  2C,W
0034:  BTFSC  03.0
0035:  GOTO   039
0036:  MOVF   2C,W
0037:  MOVWF  77
0038:  GOTO   045
0039:  CLRF   77
003A:  MOVLW  08
003B:  MOVWF  2E
003C:  RLF    2C,F
003D:  RLF    77,F
003E:  MOVF   2D,W
003F:  SUBWF  77,W
0040:  BTFSC  03.0
0041:  MOVWF  77
0042:  RLF    78,F
0043:  DECFSZ 2E,F
0044:  GOTO   03C
0045:  RETURN
....................  
.................... #list 
....................  
.................... #include "registradores16F.h" 
.................... // DEFS_877  
.................... //  
.................... // Standard definitions for PIC16F877  
.................... //  
.................... // Copyright, Peter H. Anderson, Baltimore, MD, June, '99  
....................   
.................... //#define byte int  
....................  
.................... //#byte PORTD = 0x08 
.................... //#bit INTF = 0xb.1 
....................  
.................... /* 
.................... 	Alterado por Maria Edivânia Neres de Sousa, acadêmica de Engenharia Elétrica na UFPI. 
.................... 	25/05/2022, Teresina - PI. 
.................... */ 
....................  
.................... #list  
....................  
....................  
.................... #use delay(clock = 20M) 
.................... #use rs232(baud = 9600, xmit = PIN_C6, rcv = PIN_C7, bits = 8, parity = N, stop = 1, stream = serial) 
....................  
.................... unsigned int8 counter = 0, cont = 8; 
.................... boolean counting = TRUE; 
....................  
.................... void setup() 
.................... { 
.................... 	// PERIFÉRICOS //  
.................... 	TRISB = 0b0000000; 
*
0092:  BSF    03.5
0093:  CLRF   06
.................... 	PORTB = 0b0000000;  
0094:  BCF    03.5
0095:  CLRF   06
.................... 	 
.................... 	// TIMERS // 
....................     setup_timer_1(T1_INTERNAL | T1_DIV_BY_8);   
0096:  MOVLW  B5
0097:  MOVWF  10
....................     set_timer1(0);  						   
0098:  CLRF   0E
0099:  CLRF   0F
009A:  CLRF   0E
....................     enable_interrupts(INT_TIMER1); 
009B:  BSF    03.5
009C:  BSF    0C.0
....................     enable_interrupts(GLOBAL); 
009D:  MOVLW  C0
009E:  BCF    03.5
009F:  IORWF  0B,F
00A0:  BCF    0A.3
00A1:  BCF    0A.4
00A2:  GOTO   0BB (RETURN)
.................... } 
....................  
.................... #int_timer1 
.................... void interrupcao() 
.................... { 
.................... 	set_timer1(0); 
*
0046:  CLRF   0E
0047:  CLRF   0F
0048:  CLRF   0E
.................... 	cont++; 
0049:  INCF   28,F
.................... 	 
....................     if(cont > 10) 
004A:  MOVF   28,W
004B:  SUBLW  0A
004C:  BTFSS  03.0
....................     	cont = 0; 
004D:  CLRF   28
....................     
....................     if(cont == 10 && counting) 
004E:  MOVF   28,W
004F:  SUBLW  0A
0050:  BTFSS  03.2
0051:  GOTO   08E
0052:  BTFSS  29.0
0053:  GOTO   08E
....................     { 
.................... 		cont = 0; 
0054:  CLRF   28
....................       	counter++; 
0055:  INCF   27,F
....................         putc((counter/100) + 48);		// Centena 
0056:  MOVF   27,W
0057:  MOVWF  2C
0058:  MOVLW  64
0059:  MOVWF  2D
005A:  CALL   031
005B:  MOVLW  30
005C:  ADDWF  78,W
005D:  MOVWF  2B
005E:  MOVF   2B,W
005F:  BTFSS  0C.4
0060:  GOTO   05F
0061:  MOVWF  19
....................         putc((counter%100)/10 + 48);	// Dezena 
0062:  MOVF   27,W
0063:  MOVWF  2C
0064:  MOVLW  64
0065:  MOVWF  2D
0066:  CALL   031
0067:  MOVF   77,W
0068:  MOVWF  2C
0069:  MOVLW  0A
006A:  MOVWF  2D
006B:  CALL   031
006C:  MOVLW  30
006D:  ADDWF  78,W
006E:  MOVWF  2B
006F:  MOVF   2B,W
0070:  BTFSS  0C.4
0071:  GOTO   070
0072:  MOVWF  19
....................         putc((counter%100)%10 + 48);	// Unidade 
0073:  MOVF   27,W
0074:  MOVWF  2C
0075:  MOVLW  64
0076:  MOVWF  2D
0077:  CALL   031
0078:  MOVF   77,W
0079:  MOVWF  2C
007A:  MOVLW  0A
007B:  MOVWF  2D
007C:  CALL   031
007D:  MOVLW  30
007E:  ADDWF  77,W
007F:  MOVWF  2B
0080:  MOVF   2B,W
0081:  BTFSS  0C.4
0082:  GOTO   081
0083:  MOVWF  19
....................         printf("\r\n");					// Quebra de linha  
0084:  MOVLW  0D
0085:  BTFSS  0C.4
0086:  GOTO   085
0087:  MOVWF  19
0088:  MOVLW  0A
0089:  BTFSS  0C.4
008A:  GOTO   089
008B:  MOVWF  19
....................          
....................         PORTB = counter; 
008C:  MOVF   27,W
008D:  MOVWF  06
....................     } 
008E:  BCF    0C.0
008F:  BCF    0A.3
0090:  BCF    0A.4
0091:  GOTO   01D
.................... } 
....................  
.................... void main() 
*
00A3:  MOVLW  81
00A4:  BSF    03.5
00A5:  MOVWF  19
00A6:  MOVLW  A6
00A7:  MOVWF  18
00A8:  MOVLW  90
00A9:  BCF    03.5
00AA:  MOVWF  18
00AB:  CLRF   27
00AC:  MOVLW  08
00AD:  MOVWF  28
00AE:  BSF    29.0
00AF:  BSF    03.5
00B0:  BSF    1F.0
00B1:  BSF    1F.1
00B2:  BSF    1F.2
00B3:  BCF    1F.3
00B4:  MOVLW  07
00B5:  MOVWF  1C
00B6:  BCF    03.7
00B7:  MOVLW  1F
00B8:  ANDWF  03,F
.................... {	   
.................... 	setup(); 
00B9:  BCF    03.5
00BA:  GOTO   092
.................... 	 
....................     while(1) 
....................     { 
.................... 		if(kbhit())  				// Verifica se há caracteres disponíveis na porta serial 
00BB:  BTFSS  0C.5
00BC:  GOTO   0DF
....................         { 
....................         	char input = getc(); 
00BD:  BTFSS  0C.5
00BE:  GOTO   0BD
00BF:  MOVF   1A,W
00C0:  MOVWF  2A
....................           
.................... 	        if(input == 'p' || input == 'P') 
00C1:  MOVF   2A,W
00C2:  SUBLW  70
00C3:  BTFSC  03.2
00C4:  GOTO   0C9
00C5:  MOVF   2A,W
00C6:  SUBLW  50
00C7:  BTFSS  03.2
00C8:  GOTO   0CB
.................... 	        	counting = FALSE;  	// Para a contagem 
00C9:  BCF    29.0
00CA:  GOTO   0D3
....................              
.................... 	        else if(input == 'c' || input == 'C') 
00CB:  MOVF   2A,W
00CC:  SUBLW  63
00CD:  BTFSC  03.2
00CE:  GOTO   0D2
00CF:  MOVF   2A,W
00D0:  SUBLW  43
00D1:  BTFSC  03.2
.................... 	            counting = TRUE;  	// Continua a contagem 
00D2:  BSF    29.0
....................            
.................... 	        putc(input); 
00D3:  MOVF   2A,W
00D4:  BTFSS  0C.4
00D5:  GOTO   0D4
00D6:  MOVWF  19
.................... 	        printf("\r\n");	 
00D7:  MOVLW  0D
00D8:  BTFSS  0C.4
00D9:  GOTO   0D8
00DA:  MOVWF  19
00DB:  MOVLW  0A
00DC:  BTFSS  0C.4
00DD:  GOTO   0DC
00DE:  MOVWF  19
....................       } 
00DF:  GOTO   0BB
....................    } 
.................... } 
....................  
....................  
.................... #ORG 0x1E80, 0x1EFF{} 
....................  
00E0:  GOTO   0E0
.................... /* 
.................... 				CÁLCULOS 
.................... 				 
.................... 	t = 0,0000002s*8*65536 = 0,1048 
.................... 	1/0,1048 = 9,54 ~= 10 
.................... */ 

Configuration Fuses:
   Word  1: 373B   RC NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT DEBUG NOPROTECT

   Some fuses have been forced to be compatible with the ICD debugger.
